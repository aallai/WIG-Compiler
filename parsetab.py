
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x1dz\xcem\x13\x0f\xb3\xbd\xacU[\xa2\xbd\xf9\x015'
    
_lr_action_items = {'CONST':([3,5,70,88,],[4,4,-5,-4,]),'TADD':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,150,-113,150,-106,-107,150,150,-87,150,150,-121,-93,-104,-101,-102,-89,-98,-94,-96,-95,-97,-90,-91,-88,-99,-92,-100,-115,-109,-114,150,-105,-103,150,]),'SERVICE':([0,],[2,]),'GTEQ':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,147,-113,147,-106,-107,147,147,None,147,147,-121,None,-104,147,-102,None,-98,-94,-96,-95,-97,None,None,None,147,None,147,-115,-109,-114,147,-105,-103,147,]),'START_TAG':([36,51,52,53,78,79,95,96,97,129,165,],[50,-11,50,-12,-10,-9,-13,-8,50,-15,-14,]),'VOID':([5,6,8,10,11,12,15,17,20,25,27,32,35,39,42,56,63,70,72,88,90,98,101,140,],[-2,-24,-3,-25,-26,22,-27,-35,22,22,22,22,-37,22,-38,-28,22,-5,-33,-4,22,22,-51,-78,]),'HTML':([4,],[7,]),'END_HOLE':([64,],[78,]),'WHATEVER':([36,51,52,53,78,79,95,96,97,129,165,],[51,-11,51,-12,-10,-9,-13,-8,51,-15,-14,]),'WHILE':([17,25,35,42,98,105,110,114,124,131,140,157,166,181,201,203,205,213,222,234,239,],[-35,-36,-37,-38,-34,109,-72,-64,109,-67,-78,-73,-68,-66,109,-65,109,-71,-69,109,-70,]),'META':([36,51,52,53,78,79,95,96,97,129,165,],[53,-11,53,-12,-10,-9,-13,-8,53,-15,-14,]),'LSHIFT':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,149,-113,149,-106,-107,149,149,-87,149,149,-121,-93,-104,-101,-102,-89,-98,-94,-96,-95,-97,-90,-91,-88,-99,-92,-100,-115,-109,-114,149,-105,-103,149,]),'START_HOLE':([36,51,52,53,78,79,95,96,97,129,165,],[48,-11,48,-12,-10,-9,-13,-8,48,-15,-14,]),'RETURN':([17,25,35,42,98,105,110,114,124,131,140,157,166,181,201,203,205,213,222,234,239,],[-35,-36,-37,-38,-34,108,-72,-64,108,-67,-78,-73,-68,-66,108,-65,108,-71,-69,108,-70,]),'TRUE':([17,25,35,42,98,105,108,110,113,114,115,124,127,131,133,134,140,141,142,147,149,151,152,153,154,155,156,157,158,159,160,161,162,163,166,181,201,203,205,207,209,213,222,229,234,239,],[-35,-36,-37,-38,-34,118,118,-72,118,-64,118,118,118,-67,118,118,-78,118,118,118,118,118,118,118,118,118,118,-73,118,118,118,118,118,118,-68,-66,118,-65,118,118,118,-71,-69,118,118,-70,]),'END_TAG':([65,66,67,68,80,81,82,83,84,85,86,87,94,102,106,130,],[79,-16,-16,-16,-20,-18,95,-17,-22,-23,96,97,-19,-21,129,165,]),'SELECT':([50,103,107,],[68,106,130,]),'NEQ':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,151,-113,151,-106,-107,151,151,None,151,151,-121,None,-104,151,-102,None,-98,-94,-96,-95,-97,None,None,None,151,None,151,-115,-109,-114,151,-105,-103,151,]),'!':([17,25,35,42,98,105,108,110,113,114,115,124,127,131,133,134,140,141,142,147,149,151,152,153,154,155,156,157,158,159,160,161,162,163,166,181,201,203,205,207,209,213,222,229,234,239,],[-35,-36,-37,-38,-34,115,115,-72,115,-64,115,115,115,-67,115,115,-78,115,115,115,115,115,115,115,115,115,115,-73,115,115,115,115,115,115,-68,-66,115,-65,115,115,115,-71,-69,115,115,-70,]),'%':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,152,-113,152,-106,-107,152,152,152,152,152,-121,152,-104,152,-102,152,-98,152,-96,152,-97,152,152,152,152,152,152,-115,-109,-114,152,-105,-103,152,]),']':([112,118,120,121,122,128,135,136,168,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,204,206,208,214,216,217,219,220,226,227,235,236,237,238,],[-108,-111,-120,-112,-110,-113,-106,-107,-87,-121,-93,-104,-101,-102,-89,-98,-94,-96,-95,-97,-90,-91,-88,-99,-92,-100,-115,-82,-109,-114,-79,230,231,-83,-84,-105,-103,-80,-81,-86,-85,]),')':([28,59,63,73,74,75,76,92,100,112,118,120,121,122,128,135,136,142,164,167,168,172,173,174,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,211,212,223,226,227,],[-39,-40,-52,89,-53,-54,91,-56,-55,-108,-111,-120,-112,-110,-113,-106,-107,-116,200,201,-87,205,-117,206,-118,-121,-93,-104,-101,-102,-89,-98,-94,-96,-95,-97,-90,-91,-88,-99,-92,-100,-115,-109,-114,226,227,-119,-105,-103,]),'(':([17,25,35,42,46,61,98,105,108,109,110,113,114,115,119,120,124,127,131,133,134,140,141,142,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,181,201,203,205,207,209,213,222,229,234,239,],[-35,-36,-37,-38,63,73,-34,127,127,133,-72,127,-64,127,141,142,127,127,-67,127,127,-78,127,127,127,183,127,186,127,127,127,127,127,127,-73,127,127,127,127,127,127,-68,-66,127,-65,127,127,127,-71,-69,127,127,-70,]),'+':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,153,-113,153,-106,-107,153,153,153,153,153,-121,153,-104,153,-102,153,-98,-94,-96,-95,-97,153,153,153,153,153,153,-115,-109,-114,153,-105,-103,153,]),'*':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,154,-113,154,-106,-107,154,154,154,154,154,-121,154,-104,154,-102,154,-98,154,-96,154,-97,154,154,154,154,154,154,-115,-109,-114,154,-105,-103,154,]),'-':([17,25,35,42,98,105,108,110,112,113,114,115,118,120,121,122,124,126,127,128,131,132,133,134,135,136,140,141,142,147,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,172,175,176,181,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,205,206,207,208,209,213,222,224,226,227,229,234,236,239,],[-35,-36,-37,-38,-34,113,113,-72,-108,113,-64,113,-111,-120,-112,-110,113,155,113,-113,-67,155,113,113,-106,-107,-78,113,113,113,113,113,113,113,113,113,113,-73,113,113,113,113,113,113,155,-68,155,155,155,155,-121,-66,155,-104,155,-102,155,-98,-94,-96,-95,-97,155,155,155,155,155,155,-115,113,-65,113,-109,113,-114,113,-71,-69,155,-105,-103,113,113,155,-70,]),',':([28,75,92,112,118,120,121,122,128,135,136,168,175,176,180,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,214,220,224,226,227,236,237,],[41,90,-56,-108,-111,-120,-112,-110,-113,-106,-107,-87,207,-121,210,-93,-104,-101,-102,-89,-98,-94,-96,-95,-97,-90,-91,-88,-99,-92,-100,-115,-109,-114,228,233,-126,-105,-103,-81,-86,]),'/':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,156,-113,156,-106,-107,156,156,156,156,156,-121,156,-104,156,-102,156,-98,156,-96,156,-97,156,156,156,156,156,156,-115,-109,-114,156,-105,-103,156,]),'.':([120,221,],[143,143,]),'SESSION':([5,6,8,10,11,12,15,17,20,25,30,32,33,35,42,43,47,56,70,88,99,101,140,],[-2,-24,-3,-25,-26,-34,-27,-35,-47,-36,44,-49,-48,-37,-38,44,-50,-28,-5,-4,-59,-51,-78,]),'BOOL':([5,6,8,10,11,12,15,17,20,25,27,32,35,39,42,56,63,70,72,88,90,98,101,140,],[-2,-24,-3,-25,-26,23,-27,-35,23,23,23,23,-37,23,-38,-28,23,-5,-33,-4,23,23,-51,-78,]),';':([17,25,28,29,35,42,54,58,59,71,98,105,108,110,112,114,118,120,121,122,124,126,128,131,132,135,136,138,139,140,146,157,166,168,170,176,181,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,205,206,208,213,222,226,227,230,231,234,239,],[-35,-36,-39,42,-37,-38,70,72,-40,88,-34,114,131,-72,-108,-64,-111,-120,-112,-110,114,157,-113,-67,166,-106,-107,-76,-74,-78,181,-73,-68,-87,203,-121,-66,-93,-104,-101,-102,-89,-98,-94,-96,-95,-97,-90,-91,-88,-99,-92,-100,-115,114,-65,114,-109,-114,-71,-69,-105,-103,-75,-77,114,-70,]),'IDENTIFIER':([7,9,16,17,18,19,21,22,23,24,25,31,34,35,40,41,42,44,48,49,50,66,67,68,77,80,81,84,85,93,98,102,103,105,108,110,113,114,115,116,124,125,127,131,133,134,137,140,141,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,181,183,186,201,202,203,204,205,207,209,210,213,222,228,229,232,233,234,239,],[13,14,-45,-35,-41,28,34,-44,-42,-43,-36,46,-46,-37,58,28,-38,61,64,65,67,84,84,84,92,-20,84,-22,-23,84,-34,-21,65,120,120,-72,120,-64,120,139,120,139,120,-67,120,120,169,-78,120,120,176,179,120,184,120,187,120,120,120,120,120,120,-73,120,120,120,120,120,120,-68,-66,28,28,120,215,-65,221,120,120,120,179,-71,-69,215,120,237,221,120,-70,]),'=':([13,80,84,85,112,120,176,179,215,218,221,],[26,93,-22,-23,134,-120,-121,209,229,232,-120,]),'<':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,158,-113,158,-106,-107,158,158,None,158,158,-121,None,-104,158,-102,None,-98,-94,-96,-95,-97,None,None,None,158,None,158,-115,-109,-114,158,-105,-103,158,]),'SCHEMA':([5,6,8,11,56,70,88,],[-2,9,-3,9,-28,-5,-4,]),'PLUG':([116,125,],[137,137,]),'STRING':([5,6,8,10,11,12,15,17,20,25,27,32,35,39,42,56,63,70,72,88,90,98,101,140,],[-2,-24,-3,-25,-26,24,-27,-35,24,24,24,24,-37,24,-38,-28,24,-5,-33,-4,24,24,-51,-78,]),'SHOW':([17,25,35,42,98,105,110,114,124,131,140,157,166,181,201,203,205,213,222,234,239,],[-35,-36,-37,-38,-34,116,-72,-64,116,-67,-78,-73,-68,-66,116,-65,116,-71,-69,116,-70,]),'RECEIVE':([138,139,230,],[171,-74,-75,]),'ELSE':([110,114,131,140,157,166,181,203,213,222,239,],[-72,-64,-67,-78,-73,-68,-66,-65,-71,234,-70,]),'>':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,159,-113,159,-106,-107,159,159,None,159,159,-121,None,-104,159,-102,None,-98,-94,-96,-95,-97,None,None,None,159,None,159,-115,-109,-114,159,-105,-103,159,]),'TSUB':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,148,-113,148,-106,-107,148,148,-87,148,148,-121,-93,-104,-101,-102,-89,-98,-94,-96,-95,-97,-90,-91,-88,-99,-92,-100,-115,-109,-114,148,-105,-103,148,]),'START_CLOSE_TAG':([36,51,52,53,69,78,79,95,96,97,104,129,165,],[49,-11,49,-12,-7,-10,-9,-13,-8,103,107,-15,-14,]),'INPUT':([50,],[66,]),'[':([169,171,],[202,204,]),'EQ':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,160,-113,160,-106,-107,160,160,None,160,160,-121,None,-104,160,-102,None,-98,-94,-96,-95,-97,None,None,None,160,None,160,-115,-109,-114,160,-105,-103,160,]),'IF':([17,25,35,42,98,105,110,114,124,131,140,157,166,181,201,203,205,213,222,234,239,],[-35,-36,-37,-38,-34,119,-72,-64,119,-67,-78,-73,-68,-66,119,-65,119,-71,-69,119,-70,]),'AND':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,161,-113,161,-106,-107,161,161,-87,161,161,-121,-93,-104,161,-102,-89,-98,-94,-96,-95,-97,-90,-91,-88,-99,-92,-100,-115,-109,-114,161,-105,-103,161,]),'FALSE':([17,25,35,42,98,105,108,110,113,114,115,124,127,131,133,134,140,141,142,147,149,151,152,153,154,155,156,157,158,159,160,161,162,163,166,181,201,203,205,207,209,213,222,229,234,239,],[-35,-36,-37,-38,-34,121,121,-72,121,-64,121,121,121,-67,121,121,-78,121,121,121,121,121,121,121,121,121,121,-73,121,121,121,121,121,121,-68,-66,121,-65,121,121,121,-71,-69,121,121,-70,]),'STRING_LITERAL':([17,25,35,42,66,67,68,80,81,84,85,93,98,102,105,108,110,113,114,115,124,127,131,133,134,140,141,142,147,149,151,152,153,154,155,156,157,158,159,160,161,162,163,166,181,201,203,205,207,209,213,222,229,234,239,],[-35,-36,-37,-38,85,85,85,-20,85,-22,-23,85,-34,-21,122,122,-72,122,-64,122,122,122,-67,122,122,-78,122,122,122,122,122,122,122,122,122,122,-73,122,122,122,122,122,122,-68,-66,122,-65,122,122,122,-71,-69,122,122,-70,]),'TUPLE':([5,6,8,10,11,12,15,17,20,25,32,35,42,56,63,70,88,90,98,101,105,108,110,113,114,115,124,127,131,133,134,140,141,142,147,149,151,152,153,154,155,156,157,158,159,160,161,162,163,166,181,201,203,205,207,209,213,222,229,234,239,],[-2,-24,-3,-25,-26,21,-27,-35,21,21,21,-37,-38,-28,21,-5,-4,21,21,-51,123,123,-72,123,-64,123,123,123,-67,123,123,-78,123,123,123,123,123,123,123,123,123,123,-73,123,123,123,123,123,123,-68,-66,123,-65,123,123,123,-71,-69,123,123,-70,]),'INT':([5,6,8,10,11,12,15,17,20,25,27,32,35,39,42,56,63,70,72,88,90,98,101,140,],[-2,-24,-3,-25,-26,18,-27,-35,18,18,18,18,-37,18,-38,-28,18,-5,-33,-4,18,18,-51,-78,]),'LTEQ':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,162,-113,162,-106,-107,162,162,None,162,162,-121,None,-104,162,-102,None,-98,-94,-96,-95,-97,None,None,None,162,None,162,-115,-109,-114,162,-105,-103,162,]),'END_HTML_LITERAL':([36,51,52,53,55,69,78,79,95,96,129,165,],[54,-11,-6,-12,71,-7,-10,-9,-13,-8,-15,-14,]),'START_HTML_LITERAL':([26,],[36,]),'EXIT':([17,25,35,42,98,105,110,114,124,131,140,157,166,181,201,203,205,213,222,234,239,],[-35,-36,-37,-38,-34,125,-72,-64,125,-67,-78,-73,-68,-66,125,-65,125,-71,-69,125,-70,]),'INT_LITERAL':([17,25,35,42,98,105,108,110,113,114,115,124,127,131,133,134,140,141,142,147,149,151,152,153,154,155,156,157,158,159,160,161,162,163,166,181,201,203,205,207,209,213,222,229,234,239,],[-35,-36,-37,-38,-34,128,128,-72,128,-64,128,128,128,-67,128,128,-78,128,128,128,128,128,128,128,128,128,128,-73,128,128,128,128,128,128,-68,-66,128,-65,128,128,128,-71,-69,128,128,-70,]),'{':([2,14,17,25,35,42,89,91,98,105,110,114,123,124,131,140,157,166,181,201,203,205,213,222,234,239,],[3,27,-35,-36,-37,-38,98,98,-34,98,-72,-64,144,98,-67,-78,-73,-68,-66,98,-65,98,-71,-69,98,-70,]),'$end':([1,62,],[0,-1,]),'}':([17,25,27,35,37,38,39,42,43,45,57,60,72,98,99,105,110,111,112,114,117,118,120,121,122,124,128,131,135,136,140,144,145,157,166,168,176,177,178,180,181,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,203,206,208,210,213,222,224,225,226,227,239,],[-35,-36,-29,-37,-30,56,-31,-38,-57,62,-32,-58,-33,-34,-59,-60,-72,-61,-108,-64,140,-111,-120,-112,-110,-62,-113,-67,-106,-107,-78,-122,-63,-73,-68,-87,-121,-123,208,-124,-66,-93,-104,-101,-102,-89,-98,-94,-96,-95,-97,-90,-91,-88,-99,-92,-100,-115,-65,-109,-114,-122,-71,-69,-126,-125,-105,-103,-70,]),'OR':([112,118,120,121,122,126,128,132,135,136,164,167,168,172,175,176,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,206,208,224,226,227,236,],[-108,-111,-120,-112,-110,163,-113,163,-106,-107,163,163,-87,163,163,-121,-93,-104,163,-102,-89,-98,-94,-96,-95,-97,-90,-91,-88,-99,-92,-100,-115,-109,-114,163,-105,-103,163,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'attribute':([66,67,68,81,],[81,81,81,81,]),'variables':([12,98,],[20,105,]),'argument':([63,90,],[75,75,]),'htmls':([3,5,],[6,8,]),'neattributes':([66,67,68,81,],[83,83,83,94,]),'nehtmlbodies':([36,52,97,],[55,69,104,]),'fieldvalue':([144,210,],[180,180,]),'schemas':([6,],[12,]),'nestms':([105,124,],[111,145,]),'functions':([20,],[30,]),'neexps':([142,207,],[173,223,]),'service':([0,],[1,]),'compoundstm':([89,91,105,124,201,205,234,],[99,101,110,110,110,110,110,]),'htmlbody':([36,52,97,],[52,52,52,]),'field':([27,39,],[39,39,]),'html':([3,5,],[5,5,]),'arguments':([63,],[76,]),'input':([204,233,],[220,220,]),'document':([116,125,],[138,146,]),'type':([12,20,25,32,63,90,98,],[19,31,19,31,77,77,19,]),'nefieldvalues':([144,210,],[177,177,]),'schema':([6,11,],[11,11,]),'function':([20,32,],[32,32,]),'inputs':([204,],[217,]),'nefields':([27,39,],[37,57,]),'nevariables':([12,25,98,],[17,35,17,]),'sessions':([30,43,],[45,60,]),'stms':([105,],[117,]),'neinputs':([204,233,],[219,238,]),'neschemas':([6,11,],[10,15,]),'attributes':([66,67,68,],[82,86,87,]),'variable':([12,25,98,],[25,25,25,]),'plugs':([202,228,],[216,235,]),'plug':([202,228,],[214,214,]),'simpletype':([12,20,25,27,32,39,63,90,98,],[16,16,16,40,16,40,16,16,16,]),'attr':([66,67,68,81,93,],[80,80,80,80,102,]),'nearguments':([63,90,],[74,100,]),'receive':([138,],[170,]),'fields':([27,],[38,]),'identifiers':([19,41,183,186,],[29,59,211,212,]),'stm':([105,124,201,205,234,],[124,124,213,222,239,]),'exps':([142,],[174,]),'session':([30,43,],[43,43,]),'exp':([105,108,113,115,124,127,133,134,141,142,147,149,151,152,153,154,155,156,158,159,160,161,162,163,201,205,207,209,229,234,],[126,132,135,136,126,164,167,168,172,175,182,185,188,189,190,191,192,193,194,195,196,197,198,199,126,126,175,224,236,126,]),'lvalue':([105,108,113,115,124,127,133,134,141,142,147,149,151,152,153,154,155,156,158,159,160,161,162,163,201,204,205,207,209,229,233,234,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,218,112,112,112,112,218,112,]),'nefunctions':([20,32,],[33,47,]),'fieldvalues':([144,210,],[178,225,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> service","S'",1,None,None,None),
  ('service -> SERVICE { htmls schemas variables functions sessions }','service',8,'p_service','parser.py',37),
  ('htmls -> html','htmls',1,'p_htmls','parser.py',44),
  ('htmls -> html htmls','htmls',2,'p_htmls','parser.py',45),
  ('html -> CONST HTML IDENTIFIER = START_HTML_LITERAL nehtmlbodies END_HTML_LITERAL ;','html',8,'p_html','parser.py',51),
  ('html -> CONST HTML IDENTIFIER = START_HTML_LITERAL END_HTML_LITERAL ;','html',7,'p_emptyhtml','parser.py',57),
  ('nehtmlbodies -> htmlbody','nehtmlbodies',1,'p_nehtmlbodies','parser.py',63),
  ('nehtmlbodies -> htmlbody nehtmlbodies','nehtmlbodies',2,'p_nehtmlbodies','parser.py',64),
  ('htmlbody -> START_TAG IDENTIFIER attributes END_TAG','htmlbody',4,'p_tag','parser.py',70),
  ('htmlbody -> START_CLOSE_TAG IDENTIFIER END_TAG','htmlbody',3,'p_closing_tag','parser.py',76),
  ('htmlbody -> START_HOLE IDENTIFIER END_HOLE','htmlbody',3,'p_hole','parser.py',82),
  ('htmlbody -> WHATEVER','htmlbody',1,'p_whatever','parser.py',88),
  ('htmlbody -> META','htmlbody',1,'p_meta','parser.py',94),
  ('htmlbody -> START_TAG INPUT attributes END_TAG','htmlbody',4,'p_forminput','parser.py',100),
  ('htmlbody -> START_TAG SELECT attributes END_TAG nehtmlbodies START_CLOSE_TAG SELECT END_TAG','htmlbody',8,'p_select','parser.py',106),
  ('htmlbody -> START_TAG SELECT attributes END_TAG START_CLOSE_TAG SELECT END_TAG','htmlbody',7,'p_emptyselect','parser.py',112),
  ('attributes -> <empty>','attributes',0,'p_attributes','parser.py',119),
  ('attributes -> neattributes','attributes',1,'p_attributes','parser.py',120),
  ('neattributes -> attribute','neattributes',1,'p_neattributes','parser.py',126),
  ('neattributes -> attribute neattributes','neattributes',2,'p_neattributes','parser.py',127),
  ('attribute -> attr','attribute',1,'p_attribute','parser.py',133),
  ('attribute -> attr = attr','attribute',3,'p_attribute','parser.py',134),
  ('attr -> IDENTIFIER','attr',1,'p_attr','parser.py',143),
  ('attr -> STRING_LITERAL','attr',1,'p_attr','parser.py',144),
  ('schemas -> <empty>','schemas',0,'p_schemas','parser.py',150),
  ('schemas -> neschemas','schemas',1,'p_schemas','parser.py',151),
  ('neschemas -> schema','neschemas',1,'p_neschemas','parser.py',157),
  ('neschemas -> schema neschemas','neschemas',2,'p_neschemas','parser.py',158),
  ('schema -> SCHEMA IDENTIFIER { fields }','schema',5,'p_schema','parser.py',164),
  ('fields -> <empty>','fields',0,'p_fields','parser.py',169),
  ('fields -> nefields','fields',1,'p_fields','parser.py',170),
  ('nefields -> field','nefields',1,'p_nefields','parser.py',176),
  ('nefields -> field nefields','nefields',2,'p_nefields','parser.py',177),
  ('field -> simpletype IDENTIFIER ;','field',3,'p_field','parser.py',183),
  ('variables -> <empty>','variables',0,'p_variables','parser.py',189),
  ('variables -> nevariables','variables',1,'p_variables','parser.py',190),
  ('nevariables -> variable','nevariables',1,'p_nevariables','parser.py',196),
  ('nevariables -> variable nevariables','nevariables',2,'p_nevariables','parser.py',197),
  ('variable -> type identifiers ;','variable',3,'p_variable','parser.py',203),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','parser.py',209),
  ('identifiers -> IDENTIFIER , identifiers','identifiers',3,'p_identifiers','parser.py',210),
  ('simpletype -> INT','simpletype',1,'p_simpletype','parser.py',216),
  ('simpletype -> BOOL','simpletype',1,'p_simpletype','parser.py',217),
  ('simpletype -> STRING','simpletype',1,'p_simpletype','parser.py',218),
  ('simpletype -> VOID','simpletype',1,'p_simpletype','parser.py',219),
  ('type -> simpletype','type',1,'p_type','parser.py',225),
  ('type -> TUPLE IDENTIFIER','type',2,'p_type','parser.py',226),
  ('functions -> <empty>','functions',0,'p_functions','parser.py',235),
  ('functions -> nefunctions','functions',1,'p_functions','parser.py',236),
  ('nefunctions -> function','nefunctions',1,'p_nefunction','parser.py',242),
  ('nefunctions -> function nefunctions','nefunctions',2,'p_nefunction','parser.py',243),
  ('function -> type IDENTIFIER ( arguments ) compoundstm','function',6,'p_function','parser.py',249),
  ('arguments -> <empty>','arguments',0,'p_arguments','parser.py',255),
  ('arguments -> nearguments','arguments',1,'p_arguments','parser.py',256),
  ('nearguments -> argument','nearguments',1,'p_nearguments','parser.py',262),
  ('nearguments -> argument , nearguments','nearguments',3,'p_nearguments','parser.py',263),
  ('argument -> type IDENTIFIER','argument',2,'p_argument','parser.py',269),
  ('sessions -> session','sessions',1,'p_sessions','parser.py',275),
  ('sessions -> session sessions','sessions',2,'p_sessions','parser.py',276),
  ('session -> SESSION IDENTIFIER ( ) compoundstm','session',5,'p_session','parser.py',282),
  ('stms -> <empty>','stms',0,'p_stms','parser.py',288),
  ('stms -> nestms','stms',1,'p_stms','parser.py',289),
  ('nestms -> stm','nestms',1,'p_nestms','parser.py',295),
  ('nestms -> stm nestms','nestms',2,'p_nestms','parser.py',296),
  ('stm -> ;','stm',1,'p_estm','parser.py',302),
  ('stm -> SHOW document receive ;','stm',4,'p_show','parser.py',308),
  ('stm -> EXIT document ;','stm',3,'p_exit','parser.py',314),
  ('stm -> RETURN ;','stm',2,'p_return','parser.py',320),
  ('stm -> RETURN exp ;','stm',3,'p_return','parser.py',321),
  ('stm -> IF ( exp ) stm','stm',5,'p_if','parser.py',331),
  ('stm -> IF ( exp ) stm ELSE stm','stm',7,'p_ifelse','parser.py',337),
  ('stm -> WHILE ( exp ) stm','stm',5,'p_while','parser.py',344),
  ('stm -> compoundstm','stm',1,'p_blockexpstm','parser.py',350),
  ('stm -> exp ;','stm',2,'p_blockexpstm','parser.py',351),
  ('document -> IDENTIFIER','document',1,'p_document','parser.py',358),
  ('document -> PLUG IDENTIFIER [ plugs ]','document',5,'p_document','parser.py',359),
  ('receive -> <empty>','receive',0,'p_receive','parser.py',368),
  ('receive -> RECEIVE [ inputs ]','receive',4,'p_receive','parser.py',369),
  ('compoundstm -> { variables stms }','compoundstm',4,'p_block','parser.py',375),
  ('plugs -> plug','plugs',1,'p_plugs','parser.py',381),
  ('plugs -> plug , plugs','plugs',3,'p_plugs','parser.py',382),
  ('plug -> IDENTIFIER = exp','plug',3,'p_plug','parser.py',388),
  ('inputs -> <empty>','inputs',0,'p_inputs','parser.py',394),
  ('inputs -> neinputs','inputs',1,'p_inputs','parser.py',395),
  ('neinputs -> input','neinputs',1,'p_neinputs','parser.py',401),
  ('neinputs -> input , neinputs','neinputs',3,'p_neinputs','parser.py',402),
  ('input -> lvalue = IDENTIFIER','input',3,'p_input','parser.py',408),
  ('exp -> lvalue = exp','exp',3,'p_binexp','parser.py',414),
  ('exp -> exp EQ exp','exp',3,'p_binexp','parser.py',415),
  ('exp -> exp NEQ exp','exp',3,'p_binexp','parser.py',416),
  ('exp -> exp < exp','exp',3,'p_binexp','parser.py',417),
  ('exp -> exp > exp','exp',3,'p_binexp','parser.py',418),
  ('exp -> exp LTEQ exp','exp',3,'p_binexp','parser.py',419),
  ('exp -> exp GTEQ exp','exp',3,'p_binexp','parser.py',420),
  ('exp -> exp + exp','exp',3,'p_binexp','parser.py',421),
  ('exp -> exp - exp','exp',3,'p_binexp','parser.py',422),
  ('exp -> exp * exp','exp',3,'p_binexp','parser.py',423),
  ('exp -> exp / exp','exp',3,'p_binexp','parser.py',424),
  ('exp -> exp % exp','exp',3,'p_binexp','parser.py',425),
  ('exp -> exp AND exp','exp',3,'p_binexp','parser.py',426),
  ('exp -> exp OR exp','exp',3,'p_binexp','parser.py',427),
  ('exp -> exp LSHIFT exp','exp',3,'p_binexp','parser.py',428),
  ('exp -> exp TADD IDENTIFIER','exp',3,'p_tuplebinaryexp','parser.py',435),
  ('exp -> exp TADD ( identifiers )','exp',5,'p_tuplebinaryexp','parser.py',436),
  ('exp -> exp TSUB IDENTIFIER','exp',3,'p_tuplebinaryexp','parser.py',437),
  ('exp -> exp TSUB ( identifiers )','exp',5,'p_tuplebinaryexp','parser.py',438),
  ('exp -> - exp','exp',2,'p_unaryexp','parser.py',447),
  ('exp -> ! exp','exp',2,'p_unaryexp','parser.py',448),
  ('exp -> lvalue','exp',1,'p_lval','parser.py',454),
  ('exp -> IDENTIFIER ( exps )','exp',4,'p_call','parser.py',460),
  ('exp -> STRING_LITERAL','exp',1,'p_stringliteral','parser.py',466),
  ('exp -> TRUE','exp',1,'p_boolliteral','parser.py',472),
  ('exp -> FALSE','exp',1,'p_boolliteral','parser.py',473),
  ('exp -> INT_LITERAL','exp',1,'p_intliteral','parser.py',482),
  ('exp -> TUPLE { fieldvalues }','exp',4,'p_tupleliteral','parser.py',488),
  ('exp -> ( exp )','exp',3,'p_group','parser.py',494),
  ('exps -> <empty>','exps',0,'p_exps','parser.py',500),
  ('exps -> neexps','exps',1,'p_exps','parser.py',501),
  ('neexps -> exp','neexps',1,'p_neexps','parser.py',507),
  ('neexps -> exp , neexps','neexps',3,'p_neexps','parser.py',508),
  ('lvalue -> IDENTIFIER','lvalue',1,'p_lvalue','parser.py',514),
  ('lvalue -> IDENTIFIER . IDENTIFIER','lvalue',3,'p_lvalue','parser.py',515),
  ('fieldvalues -> <empty>','fieldvalues',0,'p_fieldvalues','parser.py',521),
  ('fieldvalues -> nefieldvalues','fieldvalues',1,'p_fieldvalues','parser.py',522),
  ('nefieldvalues -> fieldvalue','nefieldvalues',1,'p_nefieldvalues','parser.py',528),
  ('nefieldvalues -> fieldvalue , fieldvalues','nefieldvalues',3,'p_nefieldvalues','parser.py',529),
  ('fieldvalue -> IDENTIFIER = exp','fieldvalue',3,'p_fieldvalue','parser.py',536),
]
